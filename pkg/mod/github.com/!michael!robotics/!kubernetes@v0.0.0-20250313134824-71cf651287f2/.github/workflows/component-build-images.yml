# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

on:
  workflow_call:
    inputs:
      push:
        description: Should the images be pushed
        default: false
        required: false
        type: boolean
      version:
        description: The version used when tagging the image
        default: 'dev'
        required: false
        type: string
      dockerhub_repo:
        description: Docker Hub repository
        default: 'robclusterdev/clusterimages'
        required: false
        type: string
      ghcr_repo:
        description: GHCR repository
        default: 'ghcr.io/robclusterdev/demo'
        required: false
        type: string

jobs:
  protobufcheck:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: opentelemetry-demo
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate
        run: make docker-generate-protobuf
      - name: Check Clean Work Tree
        run: make check-clean-work-tree

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: protobufcheck
    defaults:
      run:
        working-directory: opentelemetry-demo

    permissions:
      contents: read

    env:
      RELEASE_VERSION: "${{ github.event.release.tag_name }}"

    strategy:
      fail-fast: false
      matrix:
        file_tag:
          - file: ./src/accounting/Dockerfile
            tag_suffix: otel-demo-accounting
            context: ./
            setup-qemu: true
          - file: ./src/ad/Dockerfile
            tag_suffix: otel-demo-ad
            context: ./
            setup-qemu: true
          - file: ./src/cart/src/Dockerfile
            tag_suffix: otel-demo-cart
            context: ./
            setup-qemu: false
          - file: ./src/checkout/Dockerfile
            tag_suffix: otel-demo-checkout
            context: ./
            setup-qemu: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set default environment variables
        run: |
          # Set default values for environment variables if they are not already set
          echo "OPENTELEMETRY_CPP_VERSION=${OPENTELEMETRY_CPP_VERSION:-1.11.0}" >> $GITHUB_ENV
          echo "OTEL_JAVA_AGENT_VERSION=${OTEL_JAVA_AGENT_VERSION:-1.30.0}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: inputs.push
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        if: inputs.push
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: opentelemetry-demo/${{ matrix.file_tag.context }}
          file: opentelemetry-demo/${{ matrix.file_tag.file }}
          push: ${{ inputs.push }}
          tags: |
            ${{ inputs.dockerhub_repo }}:${{ inputs.version }}-${{ matrix.file_tag.tag_suffix }}
            ${{ inputs.ghcr_repo }}:${{ inputs.version }}-${{ matrix.file_tag.tag_suffix }}
          build-args: |
            OTEL_JAVA_AGENT_VERSION=${{ env.OTEL_JAVA_AGENT_VERSION }}
            OPENTELEMETRY_CPP_VERSION=${{ env.OPENTELEMETRY_CPP_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
